---
stages:
  - lint
  - build
  - publish

.common:
  tags:
    - docker

pylint:
  extends: .common
  stage: lint
  image: python:alpine
  before_script:
    - pip install -r requirements.txt
    - pip install pylint
  script:
    - pylint bin/**.py

dockerfile:
  extends: .common
  stage: lint
  image: ghcr.io/hadolint/hadolint:latest-alpine
  script:
    - hadolint --failure-threshold error Dockerfile

build:
  extends: .common
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
    - when: never
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context $CI_PROJECT_DIR/
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --build-arg CI_AUTH="gitlab-ci-token:$CI_JOB_TOKEN"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
      --single-snapshot
      --cleanup

publish:
  stage: publish
  tags:
    - docker
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - when: never
  before_script:
    - crane auth login -u ${CI_DEPLOY_USER} -p ${CI_DEPLOY_PASSWORD} ${CI_REGISTRY}
  variables:
    GIT_STRATEGY: none
  script:
    - crane cp "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}" "${CI_REGISTRY}/${CI_TARGET_REPO}/python:latest"
